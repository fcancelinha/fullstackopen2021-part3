{"version":3,"sources":["components/Filter.js","components/Contact.js","services/PhoneService.js","components/Contacts.js","components/ContactForm.js","components/Notification.js","index.js"],"names":["Filter","filter","onChange","value","Contact","info","name","number","baseUrl","axios","get","then","response","data","resource","post","resourceID","put","delete","Contacts","persons","handler","notificationHandler","x","toLowerCase","includes","map","c","onClick","contactID","id","window","confirm","PhoneService","console","log","content","color","catch","error","finally","ContactForm","personHandler","useState","newEntry","setNewEntry","handleInput","key","e","target","event","type","contact","preventDefault","alert","ele","concat","submitInput","Notification","notificationStyle","border","fontSize","borderWidth","backgroundColor","borderColor","padding","style","App","setPersons","setFilter","notification","setNotification","handleNotification","setTimeout","useEffect","entry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cb765ba.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, onChange}) => {\n    return (\n        <div> filter shown with: <input value={filter} onChange={onChange} /> </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\n\nconst Contact = ({ info }) => {\n\n    return <>{info.name} | tel: {info.number}</>\n}\n\n\nexport default Contact","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\n\nconst baseUrl = 'api/persons'\n\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = (resource) => {\n    return axios.post(baseUrl, resource).then(response => response.data)\n}\n\nconst update = (resourceID, resource) => {\n    return axios.put(`${baseUrl}/${resourceID}`, resource).then(response => response.data)\n}\n\nconst erase = (resourceID) => {\n    return axios.delete(`${baseUrl}/${resourceID}`).then(response => response)\n}\n\n\n\nexport default {\n    getAll,\n    create,\n    update,\n    erase\n}","import React from 'react'\nimport Contact from './Contact'\nimport PhoneService from '../services/PhoneService'\n\nconst Contacts = ({ persons, filter, handler, notificationHandler }) => {\n\n    const deleteContact = (contactID, name) => {\n\n        if (window.confirm(`Do you want to delete ${name} ?`)) {\n\n            PhoneService\n                .erase(contactID)\n                .then(response => {\n                    console.log(response)\n                    notificationHandler({\n                        content:`${name} deleted`,\n                        color: \"green\"\n                    })\n                }).catch(error => {\n                    console.log(\"deletion error\", error)\n                    notificationHandler({\n                        content:`Couldn't delete ${name}, resource already deleted, taking it off the list`,\n                        color: \"red\"\n                    })\n\n                }).finally(handler(contactID))\n        }\n    }\n\n\n    return (\n        <ul>\n            {persons.filter(x => x.name.toLowerCase().includes(filter.toLowerCase())).map(c =>\n                <li key={c.id}>\n                    <Contact info={c} /> <button onClick={() => deleteContact(c.id, c.name)}>delete</button>\n                </li>\n            )}\n        </ul>\n    )\n}\n\n\n\nexport default Contacts","import React, { useState } from 'react'\nimport PhoneService from '../services/PhoneService'\n\nconst ContactForm = ({ persons, personHandler, notificationHandler}) => {\n    const [newEntry, setNewEntry] = useState({ name: '', number: 0 })\n\n    const submitInput = (event, contact) => {\n\n        event.preventDefault();\n\n        if (!newEntry.name || !newEntry.number)\n            return alert(\"there are fields left blank\")\n\n        for (const ele of persons) {\n\n            if ((ele.name === newEntry.name || ele.number === newEntry.number)\n                && window.confirm(`${ele.name} already contains the info you are trying to add, update contact?`)) {\n\n                PhoneService\n                    .update(ele.id, contact)\n                    .then(data => {\n                        console.log(\"data\", data)\n                        personHandler(persons.map((contact => contact.id === ele.id ? data : contact )))\n                        setNewEntry({ name: '', number: 0 })\n                        notificationHandler({\n                            content:`${ele.name} updated`,\n                            color: \"green\"\n                        })\n                    }).catch(error => {\n                        console.log(error)\n                        notificationHandler({\n                            content:`There was a problem updating ${ele.name}`,\n                            color: \"red\"\n                        })\n                    })\n\n                return null;\n\n            }\n        }\n\n        PhoneService\n            .create(newEntry)\n            .then(data => {\n                console.log(\"data\", data)\n                personHandler(persons.concat(data))\n                setNewEntry({ name: '', number: 0 })\n                notificationHandler({\n                    content:`${newEntry.name} created successfully`,\n                    color: \"green\"\n                })\n            }).catch(error => {\n                console.log(\"create error\", error)\n                notificationHandler({\n                    content:`There was a problem creating ${newEntry.name} contact`,\n                    color: \"red\"\n                })\n            })\n\n\n    }\n\n    const handleInput = (key, e) => {\n\n        setNewEntry({\n            ...newEntry,\n            [key]: e.target.value\n        })\n\n    }\n\n\n    return (\n        <form>\n\n            <div>\n                name: <input value={newEntry.name} onChange={(event) => handleInput('name', event)} />\n            </div>\n            <div>\n                number: <input value={newEntry.number || ''} onChange={(event) => handleInput('number', event)} />\n            </div>\n\n            <div>\n                <button type=\"submit\" onClick={(event) => submitInput(event, newEntry)}>\n                    add\n                </button>\n            </div>\n\n        </form>\n    )\n\n\n}\n\nexport default ContactForm","import React from 'react'\n\nconst Notification = ({content, color}) => {\n\n    const notificationStyle =  {\n        color: color,\n        border: '20px solid',\n        fontSize: 'x-large',\n        borderWidth: 'thick',\n        backgroundColor: color === 'transparent' ? color : 'antiquewhite',\n        borderColor: color,\n        padding: '5px'\n    }\n\n    return (\n        <div style={notificationStyle}>\n             {content}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Filter from './components/Filter'\nimport Contacts from './components/Contacts'\nimport ContactForm from './components/ContactForm'\nimport PhoneService from './services/PhoneService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [filter, setFilter] = useState(\"\")\n  const [notification, setNotification] = useState({content:\"\", color:\"transparent\"})\n  \n  const handlePerson = (entry) => setPersons(entry)\n  const handlePersonDeletion = (contactID) => setPersons(persons.filter(({id}) => id !== contactID))\n\n  const handleNotification = (content) => {\n    setNotification(content)\n\n    setTimeout(() => {\n      setNotification({content:\"\", color:\"transparent\"})\n    }, 5000)\n  }\n\n\n  useEffect(() => {\n    PhoneService.getAll().then(data => {\n      console.log(\"getAll\", data);\n      setPersons(data)\n    })\n  }, [])\n  \n\n  return (\n    <div>\n\n      <Notification color={notification.color} content={notification.content} />\n\n      <h2>Phonebook</h2>\n\n      <Filter filter={filter} onChange={(event) => setFilter(event.target.value)}/>\n\n      <h2>add a new</h2>\n\n      <ContactForm persons={persons} personHandler={handlePerson} notificationHandler={handleNotification} />\n\n      <h2>Numbers</h2>\n\n      <Contacts persons={persons} filter={filter} handler={handlePersonDeletion} notificationHandler={handleNotification} />\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}